# Python CircleCI 2.1 configuration file
#
#
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:
  makeenv:
    parameters:
      python-version:
        type: string
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/phys2bids
    steps:
      - checkout
      - run:
          name: "Setup convenience short env var PYVER"
          command: echo "export PYVER=\"<< parameters.python-version >>\"" >> $BASH_ENV
      - persist_to_workspace:
          root: /tmp
          paths:
              - src/phys2bids
      - restore_cache:
          key: conda-<< parameters.python-version >>-v1-{{ checksum "setup.cfg" }}
      - run:
          name: Generate environment
          command: |
            if [[ -e /opt/conda/envs/${PYVER} ]]; then
              echo "Restoring environment from cache"
                source activate $PYVER
            else
              conda create -yq -n $PYVER python=$PYVER
              source activate $PYVER
              pip install -e ".[test,doc]"
            fi
      - save_cache:
          key: conda-<< parameters.python-version >>-v1-{{ checksum "setup.cfg" }}
          paths:
              - /opt/conda/envs/<< parameters.python-version >>

  unittest:
    parameters:
      python-version:
        type: string
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/phys2bids
    steps:
      - checkout
      - run:
          name: "Setup convenience short env var PYVER"
          command: echo "export PYVER=\"<< parameters.python-version >>\"" >> $BASH_ENV
      - restore_cache:
          key: conda-<< parameters.python-version >>-v1-{{ checksum "setup.cfg" }}
      - run:
          name: Install extra dependencies
          command: |
            apt-get install -yqq make
      - run:
          name: Run unit tests
          command: |
            source activate $PYVER
            make unittest
            mkdir /tmp/src/coverage
            mv /tmp/src/phys2bids/.coverage /tmp/src/coverage/.coverage.py$PYVER
      - persist_to_workspace:
          root: /tmp
          paths:
              - src/coverage/.coverage.py<< parameters.python-version >>

  integrationtest:
    parameters:
      python-version:
        type: string
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/phys2bids
    steps:
      - checkout
      - run:
          name: "Setup convenience short env var PYVER"
          command: echo "export PYVER=\"<< parameters.python-version >>\"" >> $BASH_ENV
      - restore_cache:
          key: conda-<< parameters.python-version >>-v1-{{ checksum "setup.cfg" }}
      - run:
          name: Install extra dependencies
          command: |
            apt-get install -yqq make
      - run:
          name: Run integration tests
          no_output_timeout: 10m
          command: |
            source activate $PYVER
            make integration
            mkdir /tmp/src/coverage
            mv /tmp/src/phys2bids/.coverage /tmp/src/coverage/.coverage.integration$PYVER
      - store_artifacts:
          path: /tmp/data
      - persist_to_workspace:
          root: /tmp
          paths:
              - src/coverage/.coverage.integration<< parameters.python-version >>

  style_check:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/phys2bids
    steps:
      - checkout
      - restore_cache:
          key: conda-3.7-v1-{{ checksum "setup.cfg" }}
      - run:
          name: Style check
          command: |
            apt-get install -yqq make
            source activate 3.7
            make lint
      - store_artifacts:
          path: /tmp/data/lint

  build_docs:
    working_directory: /tmp/src/phys2bids
    docker:
      - image: continuumio/miniconda3
    steps:
      - attach_workspace:  # get phys2bids
          at: /tmp
      - restore_cache:  # load environment
          key: conda-3.7-v1-{{ checksum "setup.cfg" }}
      - run:
          name: Build documentation
          command: |
            apt-get install -yqq make
            source activate 3.7
            make -C docs html
      - store_artifacts:
          path: /tmp/src/phys2bids/docs/_build/html

  merge_coverage:
    working_directory: /tmp/src/phys2bids
    docker:
      - image: continuumio/miniconda3
    steps:
      - attach_workspace:
          at: /tmp
      - checkout
      - restore_cache:
          key: conda-3.7-v1-{{ checksum "setup.cfg" }}
      - run:
          name: Merge coverage files
          command: |
            apt-get install -yqq curl
            source activate 3.7
            cd /tmp/src/coverage/
            export CODECOV_TOKEN="eb5758aa-6d0c-4981-a22a-16c663e2aaa9"
            bash <(curl -s https://codecov.io/bash) -v
      - store_artifacts:
          path: /tmp/src/coverage
      - codecov/upload:
          file: /tmp/src/coverage/coverage.xml

workflows:
  version: 2.1
  build_test:
    jobs:
      - makeenv:
          name: makeenv-<< matrix.python-version >>
          matrix:
            parameters:
              python-version: ["3.6", "3.7", "3.8", "3.9"]
      - unittest:
          name: unittest-<< matrix.python-version >>
          matrix:
            parameters:
              python-version: ["3.6", "3.7", "3.8", "3.9"]
          requires:
            - makeenv-<< matrix.python-version >>
      - integrationtest:
          name: integrationtest-<< matrix.python-version >>
          matrix:
            parameters:
              python-version: ["3.6", "3.7", "3.8", "3.9"]
          requires:
            - makeenv-<< matrix.python-version >>
      - style_check:
          requires:
            - makeenv-3.7
      - build_docs:
          requires:
            - makeenv-3.7
      - merge_coverage:
          requires:
            - unittest
            - integrationtest
            - style_check